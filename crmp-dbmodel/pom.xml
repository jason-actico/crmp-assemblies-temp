<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<artifactId>crmp-dbmodel</artifactId>
	<packaging>jar</packaging>

	<parent>
		<groupId>com.actico.crmp</groupId>
		<artifactId>crmp-assemblies</artifactId>
		<version>9.2.2-R02-SNAPSHOT</version>
	</parent>

	<properties>
	
		<!-- Only used for the publishing model generation -->
		<excel-to-rules-generator-version>8.1.5-R04</excel-to-rules-generator-version>
	    		
		<!-- Temporary directory for unpacked archives -->
		<unpack-dir>${project.build.directory}/unpack</unpack-dir>
		
		<!-- Javadoc generation fails with ACTICO Rules generated code and is slow. Thus disabling it -->
		<maven.javadoc.skip>true</maven.javadoc.skip>

	</properties>

	<dependencies>
		<!-- Required to unpack workplace-dbmodel (which is used in the mssql docker script)  -->
		<dependency>
			<groupId>com.actico.workplace</groupId>
			<artifactId>workplace-dbmodel</artifactId>
			<version>${workplace.version}</version>
		</dependency>
		
		<dependency>
			<groupId>com.actico.financial-spreading</groupId>
			<artifactId>financial-spreading-dbmodel</artifactId>
			<version>${financial-spreading-platform.version}</version>
		</dependency>

		<!-- Only required for the publishing generation -->
		<dependency>
			<groupId>com.actico.devop.rules</groupId>
			<artifactId>excel-to-rules-generator</artifactId>
			<version>${excel-to-rules-generator-version}</version>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<!-- Fetch resources-model-sources zip created by crmp-rule-module-build -->
			<plugin>
				<groupId>com.actico.devop.maven</groupId>
				<artifactId>repo-builder-maven-plugin</artifactId>
				<version>1.3.0</version>
				<executions>
					<execution>
						<id>fetch-resources-model-release</id>
						<phase>generate-resources</phase>
						<goals>
							<goal>fetch-artifacts</goal>
						</goals>
						<configuration>
							<artifactSets>
								<artifactSet>
									<outputDirectory>${unpack-dir}</outputDirectory>
									<fetchSources>false</fetchSources>
									<generateDeployScript>false</generateDeployScript>
									<flatLayout>true</flatLayout>
									<scope>compile</scope>
									<artifacts>
										<artifact>
											<groupId>com.actico.crmp</groupId>
											<artifactId>crmp-rule-module-build</artifactId>
											<version>${crmp-rulemodels.version}</version>
											<classifier>resources-model-sources</classifier>
											<type>zip</type>
											<fetchSource>false</fetchSource>
										</artifact>
									</artifacts>
								</artifactSet>
							</artifactSets>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<!-- Unzip db folder from resources-model-sources archive -->
			<plugin>
				<artifactId>maven-antrun-plugin</artifactId>
				<version>1.8</version>
				<executions>
					<execution>
						<id>unpack-crmp-resources-rule-module</id>
						<phase>process-resources</phase>
						<goals>
							<goal>run</goal>
						</goals>
						<configuration>
							<tasks>
								<!-- Step 1: Unpack resources-model-sources zip archive -->
								<unzip src="${unpack-dir}/crmp-rule-module-build-${crmp-rulemodels.version}-resources-model-sources.zip" dest="${unpack-dir}"/>
								<!-- Step 2: Copy db folder to the classes folder -->
								<copy todir="${project.build.directory}/classes/db/">
									<fileset dir="${unpack-dir}/actico.crmp.resources/crmp-database-model/resources/db"/>
								</copy>
							</tasks>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<executions>
					<!-- Unpack workplace-dbmodel (required as the mssql docker bundle is using a Workplace database setup script) -->
					<execution>
						<id>unpack-workplace-dbmodel</id>
						<phase>package</phase>
						<goals>
							<goal>unpack-dependencies</goal>
						</goals>
						<configuration>
							<includeArtifactIds>workplace-dbmodel</includeArtifactIds>
							<includeTypes>jar</includeTypes>
							<outputDirectory>${project.build.directory}/dbscripts/workplace-files</outputDirectory>
							<stripClassifier>true</stripClassifier>
							<stripVersion>true</stripVersion>
						</configuration>
					</execution>
					<!-- Unpack financial-spreading-dbmodel (required as the mssql docker bundle is using a SPR default collation setup script) -->
					<execution>
						<id>unpack-spr-dbmodel</id>
						<phase>package</phase>
						<goals>
							<goal>unpack-dependencies</goal>
						</goals>
						<configuration>
							<includeArtifactIds>financial-spreading-dbmodel</includeArtifactIds>
							<includeTypes>jar</includeTypes>
							<outputDirectory>${project.build.directory}/dbscripts/spr-files</outputDirectory>
							<stripClassifier>true</stripClassifier>
							<stripVersion>true</stripVersion>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<!-- Create db-model and integrationtest archives -->
			<plugin>
				<!-- Overwrite default execution as the jar should only contain setup scripts and liquibase changelog files -->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>3.2.0</version>
				<configuration>
					<classesDirectory>${project.build.directory}/classes</classesDirectory>
					<includes>
       					<include>db/scripts/setup/**</include>
       					<include>db/changes/**</include>
       				</includes>
				</configuration>
				<executions>
					<!-- Add another execution to create an integrationtest archive (using a corresponding classifier) -->
					<execution>
						<id>create-db-model-integrationtest-jar</id>
						<phase>package</phase>
						<goals>
							<goal>jar</goal>
						</goals>
						<configuration>
							<classifier>integrationtest</classifier>
							<classesDirectory>${project.build.directory}/classes</classesDirectory>
							<includes>
              					<include>db/scripts/integrationtest/**</include>
            				</includes>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<!-- Create additional assemblies for util (permission excel) and the docker start scripts-->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-assembly-plugin</artifactId>
				<executions>
					<execution>
						<id>util</id>
						<phase>package</phase>
						<goals>
							<goal>single</goal>
						</goals>
						<configuration>
							<descriptors>
								<descriptor>src/main/assembly/assembly_util.xml</descriptor>
							</descriptors>
						</configuration>
					</execution>
					<execution>
						<id>all-with-docker</id>
						<phase>package</phase>
						<goals>
							<goal>single</goal>
						</goals>
						<configuration>
							<descriptors>
								<descriptor>src/main/assembly/assembly_all_with_docker.xml</descriptor>
							</descriptors>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
</project>